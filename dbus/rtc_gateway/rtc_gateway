#!/usr/bin/env python
# -*- coding: utf-8 -*-
#


__version__ = '2.3'
__author__ = 'Mitxel Garcia'
__email__ = 'mitxel.garcia@ericsson.com'

import sys
import copy
import glob
import json
import atexit
import signal
import shutil
import os.path
import argparse
import time

import e3utils
import hss_utils.dbus.services
import gateway.service

import e3utils.log
_INF = e3utils.log.info
_DEB = e3utils.log.debug
_ERR = e3utils.log.error
_WRN = e3utils.log.warning

_SERVICE_ = None

def main(args=None):
    global _SERVICE_
    user_config = parse_commandline()
    signal.signal(signal.SIGTERM, quit)

    _SERVICE_ = gateway.service.Handler()
    _INF('RTC Gateway service running... waiting for requests')
    try:
        _SERVICE_.start()
        while _SERVICE_.running:
            time.sleep(5.0)
    except KeyboardInterrupt:
        _WRN('User wants to close...')
        _SERVICE_.stop()
        quit()

def parse_commandline():
    '''Parse and check command line'''
    parser = argparse.ArgumentParser(
            description='RTC Gateway')
    parser.add_argument('--version', action='version', version=__version__)

    logging=e3utils.log.add_logging_options(parser)
    args = parser.parse_args()
    e3utils.log.setup_logging_options(args)

    return args

@atexit.register
def quit(signum=None, frame=None):
    '''Terminate running process, restore config and bye'''
    _DEB('Closing RTC Gateway service...')
    if _SERVICE_ is not None:
        _SERVICE_.stop()

if __name__ == '__main__':
    main()
    sys.exit(0)

