#!/usr/bin/env python
#


import argparse
import textwrap
import sys
import hss_utils.st_command
import hss_utils.st_command.tsp

def parse_commandline():

    parser = argparse.ArgumentParser(
            formatter_class=argparse.RawDescriptionHelpFormatter,
            description=textwrap.dedent('''\
                This command is part of HSS stFramework and it is executed via run_command_node application.

                List all capsule_dumps files in the TSP cluster referenced by NODE parameter
                '''),
            epilog=textwrap.dedent(hss_utils.st_command.get_exit_status()),
            parents=[hss_utils.st_command.default_tsp_command_parser()]  )

    parser.parse_args()

    return ([hss_utils.st_command.fix_args(arg) for arg in sys.argv[1:]])

def main():
    try:
        args = parse_commandline()
        cmd = 'run_command_node TSP_list_capsule_dumps %s' % ' '.join(args)
        stdout_value, returncode = hss_utils.st_command.execute_cmd(cmd)
        if len(stdout_value) > 0 and returncode == 0:
            print stdout_value[:-1]
        sys.exit(returncode)

    except KeyboardInterrupt:
        sys.exit(0)

    except Exception, e:
        print 'Exception: %s' % e
        sys.exit(100)

if __name__ == '__main__':
    main()
